{"mappings":"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","sources":["src/js/infinite-scroll.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { ImagesAPI } from './fetch-images';\n\nconst formEl = document.getElementById('search-form');\nconst galleryEl = document.querySelector('.gallery');\n\nconst imagesAPI = new ImagesAPI();\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: '250',\n});\n\nconst options = {\n  root: null,\n  rootMargin: '100px',\n  threshold: 1.0,\n};\n\nconst io = new IntersectionObserver(handleScroll, options);\n\nformEl.addEventListener('submit', handleFormElSubmit);\n\nasync function handleFormElSubmit(event) {\n  event.preventDefault();\n\n  galleryEl.innerHTML = '';\n\n  imagesAPI.page = 1;\n\n  imagesAPI.query = event.currentTarget.elements.searchQuery.value.trim();\n\n  if (imagesAPI.query === '') {\n    notifySearchNameAbsence();\n    return;\n  }\n\n  try {\n    const { hits: images, totalHits: totalQuantity } =\n      await imagesAPI.getImages();\n\n    if (!totalQuantity) {\n      notifyIncorrectQuery();\n      return;\n    }\n\n    showAmountOfHits(totalQuantity);\n\n    renderGalleryList(images);\n\n    if (totalQuantity < imagesAPI.page * imagesAPI.per_page) {\n      notifyEndOfGallery();\n      return;\n    }\n\n    if (imagesAPI.page < totalQuantity / imagesAPI.per_page) {\n      const target = document.querySelector('.photo-card:last-child');\n      io.observe(target);\n    }\n  } catch (error) {\n    console.log(error);\n    notifyQueryError(error);\n  }\n}\n\nasync function handleScroll(entries, observer) {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting) {\n      imagesAPI.page += 1;\n      observer.unobserve(entry.target);\n\n      try {\n        const { hits: images, totalHits: totalQuantity } =\n          await imagesAPI.getImages();\n\n        renderGalleryList(images);\n\n        autoScrollPage();\n\n        lightbox.refresh();\n\n        if (imagesAPI.page < totalQuantity / imagesAPI.per_page) {\n          const target = document.querySelector('.photo-card:last-child');\n          io.observe(target);\n        } else {\n          notifyEndOfGallery();\n        }\n      } catch (error) {\n        notifyQueryError(error);\n        console.log(error);\n      }\n    }\n  });\n}\n\nfunction renderGalleryList(gallerys) {\n  const markup = gallerys\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<div class=\"photo-card\">\n        <a class=\"photo-card__item\" href=\"${largeImageURL}\">\n          <div class=\"photo-card__tumb\">\n            <img class=\"photo-card__img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n          </div>\n          <div class=\"info\">\n            <p class=\"info-item\">\n              <b class=\"info-item__param\">Likes</b>\n              <span class=\"info-item__num\">${likes}</span>\n            </p>\n            <p class=\"info-item\">\n              <b class=\"info-item__param\">Views</b>\n              <span class=\"info-item__num\">${views}</span>\n            </p>\n            <p class=\"info-item\">\n              <b class=\"info-item__param\">Comments</b>\n              <span class=\"info-item__num\">${comments}</span>\n            </p>\n            <p class=\"info-item\">\n              <b class=\"info-item__param\">Downloads</b>\n              <span class=\"info-item__num\">${downloads}</span>\n            </p>\n          </div>\n        </a>\n      </div>`\n    )\n    .join('');\n\n  galleryEl.insertAdjacentHTML('beforeend', markup);\n\n  lightbox.refresh();\n}\n\nfunction notifyIncorrectQuery() {\n  Notiflix.Notify.failure(\n    'Sorry, there are no images matching your search query. Please try again.',\n    {\n      position: 'center-center',\n    }\n  );\n}\n\nfunction notifyEndOfGallery() {\n  Notiflix.Notify.info(\n    \"We're sorry, but you've reached the end of search results.\",\n    {\n      position: 'center-center',\n    }\n  );\n}\n\nfunction showAmountOfHits(totalHits) {\n  Notiflix.Notify.success(`Hooray! We found ${totalHits} images.`, {\n    position: 'center-center',\n  });\n}\n\nfunction notifyQueryError(error) {\n  Notiflix.Notify.failure(\n    `Oops! Something went wrong. You caught the following error: ${error.message}.`,\n    {\n      position: 'center-center',\n    }\n  );\n}\n\nfunction notifySearchNameAbsence() {\n  Notiflix.Notify.info(\n    'To search for pictures you need to specify what you are looking for.',\n    {\n      position: 'center-center',\n    }\n  );\n}\n\nfunction autoScrollPage() {\n  const { height: cardHeight } =\n    galleryEl.firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$bpxeT","parcelRequire","$93b54f497d416715$var$formEl","document","getElementById","$93b54f497d416715$var$galleryEl","querySelector","$93b54f497d416715$var$imagesAPI","$9P9rw","ImagesAPI","$93b54f497d416715$var$lightbox","$parcel$interopDefault","$5IjG7","captionsData","captionDelay","$93b54f497d416715$var$io","IntersectionObserver","entries","observer","$93b54f497d416715$var$_handleScroll","apply","this","arguments","root","rootMargin","threshold","$93b54f497d416715$var$_handleFormElSubmit","$2TvXO","mark","_callee","event","ref","images","totalQuantity","target","preventDefault","innerHTML","page","query","currentTarget","elements","searchQuery","value","trim","$93b54f497d416715$var$notifySearchNameAbsence","getImages","_ctx","sent","hits","totalHits","$93b54f497d416715$var$notifyIncorrectQuery","$93b54f497d416715$var$showAmountOfHits","$93b54f497d416715$var$renderGalleryList","per_page","$93b54f497d416715$var$notifyEndOfGallery","observe","console","log","t0","$93b54f497d416715$var$notifyQueryError","_callee1","forEach","entry","isIntersecting","unobserve","$93b54f497d416715$var$autoScrollPage","refresh","gallerys","markup","map","param","webformatURL","largeImageURL","tags","likes","views","comments","downloads","concat","join","insertAdjacentHTML","$6JpON","Notify","failure","position","info","success","error","message","cardHeight","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","addEventListener"],"version":3,"file":"infinite-scroll.246e2419.js.map"}