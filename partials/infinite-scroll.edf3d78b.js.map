{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAKA,MAAMC,EAASC,SAASC,eAAe,eACjCC,EAAYF,SAASG,cAAc,YAEnCC,EAAY,IAAI,EAAAC,EAAAC,WAEhBC,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,aAAc,CAChDC,aAAc,MACdC,aAAc,QASVC,EAAK,IAAIC,sBA8CfC,eAA4BC,EAASC,GACnCD,EAAQE,SAAQH,MAAMI,IACpB,GAAIA,EAAMC,eAAgB,CACxBf,EAAUgB,MAAQ,EAClBJ,EAASK,UAAUH,EAAMI,QAEzB,IACE,MAAQC,KAAMC,EAAQC,UAAWC,SACzBtB,EAAUuB,YAQlB,GANAC,EAAkBJ,GA2G1B,WACE,MAAQK,OAAQC,GACd5B,EAAU6B,kBAAkBC,wBAE9BC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLM,SAAU,U,CA/GNC,GAEA9B,EAAS+B,UAELlC,EAAUgB,KAAOM,EAAgBtB,EAAUmC,SAAU,CACvD,MAAMjB,EAAStB,SAASG,cAAc,0BACtCS,EAAG4B,QAAQlB,E,MAEXmB,G,CAEF,MAAOC,GACPC,EAAiBD,GACjBE,QAAQC,IAAIH,E,QA5EJ,CACdI,KAAM,KACNC,WAAY,QACZC,UAAW,IA+Eb,SAASpB,EAAkBqB,GACzB,MAAMC,EAASD,EACZE,KACC,EAACC,aACCA,EAAYC,cACZA,EAAaC,KACbA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,KAEA,uEACoCL,gGAEID,WAAsBE,4MAKzBC,kKAIAC,qKAIAC,sKAIAC,6EAMxCC,KAAK,IAERzD,EAAU0D,mBAAmB,YAAaV,GAE1C3C,EAAS+B,S,CAYX,SAASG,IACPjC,EAAAX,GAASgE,OAAOC,KACd,6DACA,CACEC,SAAU,iB,CAWhB,SAASpB,EAAiBD,GACxBlC,EAAAX,GAASgE,OAAOG,QACd,+DAA+DtB,EAAMuB,WACrE,CACEF,SAAU,iB,CAnJhBhE,EAAOmE,iBAAiB,UAExBpD,eAAkCqD,GAShC,GARAA,EAAMC,iBAENlE,EAAUmE,UAAY,GAEtBjE,EAAUgB,KAAO,EAEjBhB,EAAUkE,MAAQH,EAAMI,cAAcC,SAASC,YAAYC,MAAMC,OAEzC,KAApBvE,EAAUkE,MAEZ,YA4IF9D,EAAAX,GAASgE,OAAOC,KACd,uEACA,CACEC,SAAU,kBA5Id,IACE,MAAQxC,KAAMC,EAAQC,UAAWC,SACzBtB,EAAUuB,YAElB,IAAKD,EAEH,YAkGJlB,EAAAX,GAASgE,OAAOG,QACd,2EACA,CACED,SAAU,kBA9FZ,GA4GsBtC,EAhHLC,EAiHnBlB,EAAAX,GAASgE,OAAOe,QAAQ,oBAAoBnD,YAAqB,CAC/DsC,SAAU,kBAhHVnC,EAAkBJ,GAEdE,EAAgBtB,EAAUgB,KAAOhB,EAAUmC,SAE7C,YADAE,IAIF,GAAIrC,EAAUgB,KAAOM,EAAgBtB,EAAUmC,SAAU,CACvD,MAAMjB,EAAStB,SAASG,cAAc,0BACtCS,EAAG4B,QAAQlB,E,EAEb,MAAOoB,GACPE,QAAQC,IAAIH,GACZC,EAAiBD,E,CAiGrB,IAA0BjB,C","sources":["src/js/infinite-scroll.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { ImagesAPI } from './fetch-images';\n\nconst formEl = document.getElementById('search-form');\nconst galleryEl = document.querySelector('.gallery');\n\nconst imagesAPI = new ImagesAPI();\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: '250',\n});\n\nconst options = {\n  root: null,\n  rootMargin: '100px',\n  threshold: 1.0,\n};\n\nconst io = new IntersectionObserver(handleScroll, options);\n\nformEl.addEventListener('submit', handleFormElSubmit);\n\nasync function handleFormElSubmit(event) {\n  event.preventDefault();\n\n  galleryEl.innerHTML = '';\n\n  imagesAPI.page = 1;\n\n  imagesAPI.query = event.currentTarget.elements.searchQuery.value.trim();\n\n  if (imagesAPI.query === '') {\n    notifySearchNameAbsence();\n    return;\n  }\n\n  try {\n    const { hits: images, totalHits: totalQuantity } =\n      await imagesAPI.getImages();\n\n    if (!totalQuantity) {\n      notifyIncorrectQuery();\n      return;\n    }\n\n    showAmountOfHits(totalQuantity);\n\n    renderGalleryList(images);\n\n    if (totalQuantity < imagesAPI.page * imagesAPI.per_page) {\n      notifyEndOfGallery();\n      return;\n    }\n\n    if (imagesAPI.page < totalQuantity / imagesAPI.per_page) {\n      const target = document.querySelector('.photo-card:last-child');\n      io.observe(target);\n    }\n  } catch (error) {\n    console.log(error);\n    notifyQueryError(error);\n  }\n}\n\nasync function handleScroll(entries, observer) {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting) {\n      imagesAPI.page += 1;\n      observer.unobserve(entry.target);\n\n      try {\n        const { hits: images, totalHits: totalQuantity } =\n          await imagesAPI.getImages();\n\n        renderGalleryList(images);\n\n        autoScrollPage();\n\n        lightbox.refresh();\n\n        if (imagesAPI.page < totalQuantity / imagesAPI.per_page) {\n          const target = document.querySelector('.photo-card:last-child');\n          io.observe(target);\n        } else {\n          notifyEndOfGallery();\n        }\n      } catch (error) {\n        notifyQueryError(error);\n        console.log(error);\n      }\n    }\n  });\n}\n\nfunction renderGalleryList(gallerys) {\n  const markup = gallerys\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<div class=\"photo-card\">\n        <a class=\"photo-card__item\" href=\"${largeImageURL}\">\n          <div class=\"photo-card__tumb\">\n            <img class=\"photo-card__img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n          </div>\n          <div class=\"info\">\n            <p class=\"info-item\">\n              <b class=\"info-item__param\">Likes</b>\n              <span class=\"info-item__num\">${likes}</span>\n            </p>\n            <p class=\"info-item\">\n              <b class=\"info-item__param\">Views</b>\n              <span class=\"info-item__num\">${views}</span>\n            </p>\n            <p class=\"info-item\">\n              <b class=\"info-item__param\">Comments</b>\n              <span class=\"info-item__num\">${comments}</span>\n            </p>\n            <p class=\"info-item\">\n              <b class=\"info-item__param\">Downloads</b>\n              <span class=\"info-item__num\">${downloads}</span>\n            </p>\n          </div>\n        </a>\n      </div>`\n    )\n    .join('');\n\n  galleryEl.insertAdjacentHTML('beforeend', markup);\n\n  lightbox.refresh();\n}\n\nfunction notifyIncorrectQuery() {\n  Notiflix.Notify.failure(\n    'Sorry, there are no images matching your search query. Please try again.',\n    {\n      position: 'center-center',\n    }\n  );\n}\n\nfunction notifyEndOfGallery() {\n  Notiflix.Notify.info(\n    \"We're sorry, but you've reached the end of search results.\",\n    {\n      position: 'center-center',\n    }\n  );\n}\n\nfunction showAmountOfHits(totalHits) {\n  Notiflix.Notify.success(`Hooray! We found ${totalHits} images.`, {\n    position: 'center-center',\n  });\n}\n\nfunction notifyQueryError(error) {\n  Notiflix.Notify.failure(\n    `Oops! Something went wrong. You caught the following error: ${error.message}.`,\n    {\n      position: 'center-center',\n    }\n  );\n}\n\nfunction notifySearchNameAbsence() {\n  Notiflix.Notify.info(\n    'To search for pictures you need to specify what you are looking for.',\n    {\n      position: 'center-center',\n    }\n  );\n}\n\nfunction autoScrollPage() {\n  const { height: cardHeight } =\n    galleryEl.firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$7f13665ecc617d63$var$formEl","document","getElementById","$7f13665ecc617d63$var$galleryEl","querySelector","$7f13665ecc617d63$var$imagesAPI","$18XA8","ImagesAPI","$7f13665ecc617d63$var$lightbox","$parcel$interopDefault","$fZKcF","captionsData","captionDelay","$7f13665ecc617d63$var$io","IntersectionObserver","async","entries","observer","forEach","entry","isIntersecting","page","unobserve","target","hits","images","totalHits","totalQuantity","getImages","$7f13665ecc617d63$var$renderGalleryList","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","$7f13665ecc617d63$var$autoScrollPage","refresh","per_page","observe","$7f13665ecc617d63$var$notifyEndOfGallery","error","$7f13665ecc617d63$var$notifyQueryError","console","log","root","rootMargin","threshold","gallerys","markup","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","Notify","info","position","failure","message","addEventListener","event","preventDefault","innerHTML","query","currentTarget","elements","searchQuery","value","trim","success"],"version":3,"file":"infinite-scroll.edf3d78b.js.map"}